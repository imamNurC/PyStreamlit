# -*- coding: utf-8 -*-
"""Copy of Proyek Analisis Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MuFYaG5h6PiTxG1uusq66Dtx0Uue5Drk

# Proyek Analisis Data: [Input Nama Dataset]
- **Nama:** Imam Nurcakra
- **Email:** imamnurcakra@gmail.com
- **ID Dicoding:** imamnurcakra

## Menentukan Pertanyaan Bisnis

- Bagaimana perubahan sebaran angin di kota wanliu
- Bagaimana Perubahan kecepatan angin di kota wanliu tiap periode per hari, per 10 hari dan per 10 bulan

## Import Semua Packages/Library yang Digunakan
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import zipfile
import os

"""## Data Wrangling

### Gathering Data
"""

# Mount Google Drive if needed
from google.colab import drive
drive.mount('/content/drive')

!cd drive/MyDrive/
# Destination directory to extract files
to_path = '/content/drive/MyDrive/AirData/'

# Create the destination directory if it doesn't exist
os.makedirs(to_path, exist_ok=True)

import gdown

# Define the Google Drive file URL
file_url = 'https://drive.google.com/uc?id=1RhU3gJlkteaAQfyn9XOVAz7a5o1-etgr'

# Destination directory to save the downloaded file
download_to_path = to_path + '/AirQualityData.zip'

if not os.path.exists(download_to_path):
    # Download the ZIP file
    gdown.download(file_url, download_to_path, quiet=False)
    print()
    print("Download complete.")
else:
    print("ZIP file already exists. Skipping download.")

# Extract the ZIP file
with zipfile.ZipFile(download_to_path, 'r') as zip_ref:
    zip_ref.extractall(to_path)
    print("Extraction complete.")

data = pd.read_csv('/content/drive/MyDrive/AirData/PRSA_Data_20130301-20170228/PRSA_Data_Wanliu_20130301-20170228.csv')

data.head()

"""### Assessing Data

cek missing value
"""

data.isnull().sum()

"""*Duplicated data*"""

data.duplicated().sum()

"""#### Descriptive Statistics"""

data.describe()

data.info()

"""*Outliers*

### Cleaning Data
"""

df = data.drop(['station'], axis=1)
df.head()

df.fillna(method = "ffill", inplace=True)
df.isnull().sum()

df

"""## Exploratory Data Analysis (EDA)

##### Persebaran arah angin di wanliu
"""

df["wind_direction"]= df["wd"]
wind_direction_df = df[['wind_direction', 'wd']].copy()
wind_direction_df = wind_direction_df.groupby(by="wind_direction").agg({"wd": "count"}).sort_values(by="wd", ascending=False).reset_index()
wind_direction_df = wind_direction_df.rename(columns = {'wd' : 'jumlah'})
wind_direction_df['percent'] = round((wind_direction_df['jumlah'] / wind_direction_df['jumlah'].sum()) * 100, 2)
wind_direction_df

"""## Kecepatan angin di Wanliu


*   Selama 24 jam pada tanggal 2013-03-01 00.00-19.00 (20 data pertama)
*   Selama 10 hari pada tanggal 2013-03-01 sampai 2013-03-10 (10 data pertama)
*   Selama 10 bulan pada tanggal 2013-03 sampai 2013-10 (10 data pertama)

##### Kecepatan angin selama sehari jam tanggal 2013-03-01 00.00-23.00
"""

wind_speed_hour = df.groupby(by = ['year', 'month', 'day','hour'] ).agg({
            "WSPM" : "mean"}).sort_values(by = ['year', 'month', 'day','hour'], ascending = True)
wind_speed_hour = wind_speed_hour.reset_index()
wind_speed_hour['time'] = wind_speed_hour["hour"].astype(str) + ":00"
wind_speed_hour.head(24)

"""##### Kecepatan angin selama 10 hari tanggal 2013-03-01 - 2013-03-10"""

wind_speed_day = df.groupby(by = ['year', 'month', 'day'] ).agg({
            "WSPM" : "mean"}).sort_values(by = ['year', 'month', 'day'], ascending = True)
wind_speed_day = wind_speed_day.reset_index()
wind_speed_day['time'] = wind_speed_day["year"].astype(str) + "-" + wind_speed_day["month"].astype(str) + "-" + wind_speed_day["day"].astype(str)
wind_speed_day.head(10)

"""##### Kecepatan angin selama 10 bulan tanggal 2013-03 - 2013-12

"""

wind_speed_month = df.groupby(by = ['year', 'month'] ).agg({
            "WSPM" : "mean"}).sort_values(by = ['year', 'month'], ascending = True)
wind_speed_month = wind_speed_month.reset_index()
wind_speed_month['time'] = wind_speed_month["year"].astype(str) + "-" + wind_speed_month["month"].astype(str)
wind_speed_month.head(10)

"""## Visualization & Explanatory Analysis

### Pertanyaan 1:
Bagaimana perubahan persebaran arah angin di wanliu
"""

def arah_angin(data):
    fig, ax = plt.subplots(figsize=(10, 4))
    sns.barplot(data= data, x= data['percent'], y= data['wind_direction'], palette= 'plasma', ax= ax, orient= 'h')
    ax.tick_params(axis='y' )
    ax.tick_params(axis='x',  labelrotation = 45)
    ax.set_ylabel(None)
    ax.set_xlabel("Percentage (%)")
    plt.show()

arah_angin(wind_direction_df.head(5))

"""### Pertanyaan 2:

Bagaimana Perubahan kecepatan angin di kota wanliu tiap periode per hari, per 10 hari dan per 10 bulan
"""

def kecepatan_angin(df):
    fig, ax = plt.subplots(figsize=(10, 4))
    ax.plot(df['time'], df['WSPM'], marker='o', linewidth=2, color="#BD1266")
    ax.tick_params(axis='y', )
    ax.tick_params(axis='x',  labelrotation = 45)
    ax.set_ylabel("Kecepatan angin(m/s)")
    ax.set_title("kecepatan angin", loc="center")
    plt.show()

kecepatan_angin(wind_speed_hour.head(23))

kecepatan_angin(wind_speed_day.head(10))

kecepatan_angin(wind_speed_month.head(10))

"""## Conclusion

- Conclution pertanyaan 1
- Conclution pertanyaan 2
"""